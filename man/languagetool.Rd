% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_languagetool.R, R/langtool_function.R
\name{lato_quick_setup}
\alias{lato_quick_setup}
\alias{languagetool}
\alias{lato_list_languages}
\alias{lato_get_version}
\alias{lato_test_setup}
\alias{lato_get_default_executable}
\alias{test_text}
\title{LanguageTool API function}
\usage{
lato_quick_setup(path = lato_default_path(), overwrite = FALSE)

languagetool(
  x = c(),
  input_file = NA_character_,
  input_directory = NA_character_,
  recursive = FALSE,
  executable = lato_get_default_executable(),
  encoding = "utf-8",
  linebreak_paragraph = FALSE,
  language = "en-GB",
  list_languages = FALSE,
  auto_detect_language = FALSE,
  mothertongue = NA_character_,
  disabled_rules = c(),
  enabled_rules = c(),
  enabled_only = FALSE,
  disabled_categories = c(),
  enabled_categories = c(),
  tagger_only = FALSE,
  list_unknown = FALSE,
  bitext = FALSE,
  profile = FALSE,
  verbose = FALSE,
  version = FALSE,
  apply = FALSE,
  rule_file = NA_character_,
  false_friends_file = NA_character_,
  bitext_rules_file = NA_character_,
  language_model_directory = NA_character_,
  word2vec_model_directory = NA_character_,
  neural_network_model_directory = NA_character_,
  fast_text_model_file = NA_character_,
  fast_text_binary_file = NA_character_,
  quiet = FALSE
)

lato_list_languages(executable = lato_get_default_executable())

lato_get_version(executable = lato_get_default_executable())

lato_test_setup(executable = lato_get_default_executable())

lato_get_default_executable()
}
\arguments{
\item{path}{Character. Directory where LanguageTool should be installed.}

\item{overwrite}{Logical. Should the user not be asked whether she would like to 
overwrite an already available LanguageTool installation? (Default: FALSE)}

\item{x}{Character vector. Text to analyse}

\item{input_file}{Character. File to analyse (instead of x)}

\item{input_directory}{Character. Directory with files to analyse (instead of x). 
Maybe recursive = TRUE is necessary}

\item{recursive}{Logical. Work recursively on directory, not on a single file}

\item{executable}{Character. Path to the languagetool executable on your system}

\item{encoding}{Character. Character set of the input text, e.g. utf-8 or latin1}

\item{linebreak_paragraph}{Logical. Assume that a single line break marks the end 
of a paragraph}

\item{language}{Character. The language code of the text, e.g. en for English, 
en-GB for British English}

\item{list_languages}{Logical. Print all available languages and exit}

\item{auto_detect_language}{Logical. Auto-detect the language of the input text - 
note this will not detect variants like 'English (US)', so you will not get spell 
checking for languages with variants}

\item{mothertongue}{Character. The language code of your first language, used to 
activate false-friend checking}

\item{disabled_rules}{Integer vector. List of rule ids to be disabled}

\item{enabled_rules}{Integer vector. List of rule ids to be enabled}

\item{enabled_only}{Logical. Disable all rules except those enabled explicitly}

\item{disabled_categories}{Integer vector. List of category ids to be disabled}

\item{enabled_categories}{Integer vector. List of category ids to be enabled}

\item{tagger_only}{Logical. Don't check, but only print text analysis (sentences, 
part-of-speech tags)}

\item{list_unknown}{Logical. Also print a summary of words from the input that 
LanguageTool doesn't know}

\item{bitext}{Logical. Check bilingual texts with a tab-separated input file,
see http://languagetool.wikidot.com/checking-translations-bilingual-texts}

\item{profile}{Logical. Print performance measurements}

\item{verbose}{Logical. Print text analysis (sentences, part-of-speech tags)}

\item{version}{Logical. Print LanguageTool version number}

\item{apply}{Logical. Automatically apply suggestions if available, printing result. 
NOTE: only use with very robust rules, as this will otherwise introduce new errors}

\item{rule_file}{Character. Use an additional grammar file; if the filename 
contains a known language code, it is used in addition of standard rules}

\item{false_friends_file}{Character. Use external false friend file to be used 
along with the built-in rules}

\item{bitext_rules_file}{Character. Use external bitext XML rule file (useful only in 
bitext mode)}

\item{language_model_directory}{Character. A directory with e.g. 'en' sub directory 
(i.e. a language code) that contains '1grams'...'3grams' sub directories with Lucene 
indexes with ngram occurrence counts; activates the confusion rule if supported}

\item{word2vec_model_directory}{Character. A directory with e.g. 'en' sub directory 
(i.e. a language code) that contains final_embeddings.txt and dictionary.txt; 
activates neural network based rules}

\item{neural_network_model_directory}{Character. A base directory for various saved 
neural network models}

\item{fast_text_model_file}{Character. fasttext language detection model, 
see https://fasttext.cc/docs/en/language-identification.html}

\item{fast_text_binary_file}{Character. fasttext executable, 
see https://fasttext.cc/docs/en/support.html}

\item{quiet}{Logical. Should the console output of languagetool be displayed or hidden?}
}
\value{
A \code{\link[tibble]{tibble}} (\code{data.frame}) with the output of languagetool parsed from json. 
Some options yield special outputs
}
\description{
Provides a wrapper for the 
\href{http://wiki.languagetool.org/command-line-options}{LanguageTool CLI tool} 
for spelling, grammar and language checking. \code{lato_quick_setup} provides 
an easy option to automatically download LanguageTool.
}
\examples{
\donttest{
# install LanguageTool if it is not already available
if (!LanguageToolR::lato_test_setup()) {
  LanguageToolR::lato_quick_setup(overwrite = TRUE)
}

# apply LanguageTool checks to some test text
languagetool(test_text)
}

}
